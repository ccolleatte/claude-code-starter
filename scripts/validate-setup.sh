#!/bin/bash
set -e

echo "üîç Claude Code Starter Kit - Validation Setup"
echo "============================================="

ERRORS=0

# Test 1: Node.js
echo "1. V√©rification Node.js..."
if command -v node &> /dev/null; then
    echo "   ‚úÖ Node.js $(node --version)"
else
    echo "   ‚ùå Node.js non install√©"
    ERRORS=$((ERRORS + 1))
fi

# Test 2: Fichier .env
echo "2. V√©rification .env..."
if [ -f .env ]; then
    echo "   ‚úÖ Fichier .env pr√©sent"
    
    # Test cl√©s API
    KEYS_COUNT=$(grep -c "^[A-Z].*=.*-" .env 2>/dev/null || echo "0")
    if [ "$KEYS_COUNT" -gt 0 ]; then
        echo "   ‚úÖ $KEYS_COUNT cl√©(s) API configur√©e(s)"
    else
        echo "   ‚ö†Ô∏è  Aucune cl√© API d√©tect√©e dans .env"
        ERRORS=$((ERRORS + 1))
    fi
else
    echo "   ‚ùå Fichier .env manquant"
    ERRORS=$((ERRORS + 1))
fi

# Test 3: Configuration MCP
echo "3. V√©rification MCP..."
if [ -f .claude/mcp.json ]; then
    MCP_SERVERS=$(grep -c "\"type\": \"stdio\"" .claude/mcp.json 2>/dev/null || echo "0")
    echo "   ‚úÖ Configuration MCP pr√©sente ($MCP_SERVERS serveurs)"
else
    echo "   ‚ùå Configuration MCP manquante"
    ERRORS=$((ERRORS + 1))
fi

# Test 4: Scripts MCP
echo "4. V√©rification scripts MCP..."
MCP_SCRIPTS=0
for script in .claude/scripts/*-mcp.sh; do
    if [ -f "$script" ]; then
        MCP_SCRIPTS=$((MCP_SCRIPTS + 1))
    fi
done
echo "   ‚úÖ $MCP_SCRIPTS script(s) MCP disponible(s)"

# Test 5: Tests projet
echo "5. V√©rification tests..."
if npm test > /dev/null 2>&1; then
    echo "   ‚úÖ Tests passent"
else
    echo "   ‚ùå Tests √©chouent"
    ERRORS=$((ERRORS + 1))
fi

# Test 6: Cipher (si cl√©s pr√©sentes)
echo "6. Test Cipher MCP..."
if grep -q "sk-" .env 2>/dev/null; then
    if npx @byterover/cipher "test setup" > /dev/null 2>&1; then
        echo "   ‚úÖ Cipher op√©rationnel"
    else
        echo "   ‚ö†Ô∏è  Cipher non op√©rationnel (v√©rifiez cl√©s API)"
        ERRORS=$((ERRORS + 1))
    fi
else
    echo "   ‚ö†Ô∏è  Cipher non test√© (cl√©s API manquantes)"
fi

# R√©sultat final
echo ""
echo "=========================================="
if [ $ERRORS -eq 0 ]; then
    echo "üéâ SETUP COMPLET - Kit pr√™t √† l'emploi !"
    echo ""
    echo "üöÄ Commandes utiles :"
    echo "   npm test              # Tests complets"
    echo "   npm run test:quick    # Tests rapides"
    echo "   npm run security:scan # Scan s√©curit√©"
    exit 0
else
    echo "‚ùå SETUP INCOMPLET - $ERRORS erreur(s) d√©tect√©e(s)"
    echo ""
    echo "üîß Actions correctives :"
    echo "   1. V√©rifiez vos cl√©s API dans .env"
    echo "   2. Relancez: npm run validate:setup"
    exit 1
fi